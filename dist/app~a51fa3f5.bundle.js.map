{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";0YACA,smNAIA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAuCF,QApC8B,CACtBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJ5B,EAKxB,EACME,sBAAqB,WAAG,iHACdT,EAAS,uCAAEU,OAAOX,IAAiB,0CADrB,EAE9B,EACMY,iBAAgB,WAAG,iHACTX,EAAS,uCAAEU,OAAOX,IAAiB,0CAD1B,EAEzB,EACMa,cAAa,SAACC,GAAY,oGACzBA,EAAWC,eAAe,MAAO,CAAF,gEAGtBd,EAAS,uCAAEe,IAAIhB,EAAmBc,IAAU,0CAJ5B,EAKhC,EACMG,iBAAgB,SAACT,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,EAEMU,kBAAiB,SAACC,GAAO,4HACf,EAAKT,wBAAuB,uCAAEU,QAAO,SAACN,GAClD,IACMO,GAD8BP,EAAWQ,OAAS,KAAKC,cACJC,QAAQ,MAAO,IAGlEC,EADmBN,EAAMI,cACMC,QAAQ,MAAO,IAEpD,OAAuD,IAAhDH,EAAsBK,QAAQD,EACvC,KAAC,0CAT4B,EAU/B,gDCvCF,QALqB,CACnBE,gBAAiB,GAAF,OAAK7B,EAAAA,EAAAA,SAAe,SACnC8B,OAAQ,SAACpB,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,mBAAWU,EAAE,sPCHjD,4wNAcA,QAb0B,yBAD1B,4FAC0B,SAD1B,QAMG,EALuB,EAUvB,OAXH,EAC0B,OAD1B,EAC0B,4CACxB,sGACyBqB,MAAMC,EAAAA,iBAA6B,OAA5C,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8B1B,GAAE,uFACPqB,MAAMC,EAAAA,OAAoBtB,IAAI,OAAvC,OAARuB,EAAW,EAAH,uBACPA,EAASC,QAAM,2CACvB,+CAXH,6DAWG,EAVuB,mCCO1B,QATe,CACbG,SAAU,sCACVC,eAAgB,qDAChBC,YAAY,IAAIC,MAAOC,cACvB1C,cAAe,gCACfE,iBAAkB,EAClBC,kBAAmB,yGCSfwC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,kBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF,IAEsBP,SAASC,cAAc,oBAC/BI,iBAAiB,SAAS,SAACG,GACvCA,EAAMC,iBACNT,SAASC,cAAc,gBAAgBS,OACzC","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurantlist-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable no-prototype-builtins */\r\n/* eslint-disable consistent-return */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async FavoriteRestaurantIdb() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async getAllRestaurant() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async searchRestaurants(query) {\r\n    return (await this.FavoriteRestaurantIdb()).filter((restaurant) => {\r\n      const loweredCaseRestaurantTitle = (restaurant.title || '-').toLowerCase();\r\n      const jammedRestaurantTitle = loweredCaseRestaurantTitle.replace(/\\s/g, '');\r\n\r\n      const loweredCaseQuery = query.toLowerCase();\r\n      const jammedQuery = loweredCaseQuery.replace(/\\s/g, '');\r\n\r\n      return jammedRestaurantTitle.indexOf(jammedQuery) !== -1;\r\n    });\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  RESTAURANT_LIST: `${CONFIG.BASE_URL}/list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}/detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantListSource {\r\n  static async restaurantList() {\r\n    const response = await fetch(API_ENDPOINT.RESTAURANT_LIST);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    return response.json();\r\n  }\r\n}\r\n\r\nexport default RestaurantListSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'restaurant-catalogue-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurant',\r\n};\r\n\r\nexport default CONFIG;\r\n","/* eslint-disable no-unused-vars */\nimport 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.css';\nimport '@fortawesome/fontawesome-free/js/fontawesome';\nimport '@fortawesome/fontawesome-free/js/solid';\nimport '@fortawesome/fontawesome-free/js/regular';\nimport '@fortawesome/fontawesome-free/js/brands';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\n\nconst START = 10;\nconst NUMBER_OF_IMAGES = 100;\n\nconst app = new App({\n  button: document.querySelector('#hamburgerButton'),\n  drawer: document.querySelector('#navigationDrawer'),\n  content: document.querySelector('#mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n\nconst skipToContent = document.querySelector('.skip-to-content');\nskipToContent.addEventListener('click', (event) => {\n  event.preventDefault();\n  document.querySelector('#mainContent').focus();\n});\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","FavoriteRestaurantIdb","getAll","getAllRestaurant","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","searchRestaurants","query","filter","jammedRestaurantTitle","title","toLowerCase","replace","jammedQuery","indexOf","RESTAURANT_LIST","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister","event","preventDefault","focus"],"sourceRoot":""}